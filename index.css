/*
Author: Cassie Lewis
https://clewisdev.com
Date: August 2023
*/

/*====== VARIABLES ======*/

:root {
    
    /*COLORS*/
    --bg: #fff;
    --bg-body: #D1D5DB;
    --border-color: gray;
    --text-color: #222222;
    --element-focus: blue;
    --color-focus: #000;
  
    
    /*BORDER RADIUS*/
    --br-small: 5px;
}

.darkmode {
    --bg: #333;
    --bg-body: #000;
    --text-color: #fff; 
    --element-focus: lightblue;
    --color-focus: #fff;

}


/*====== MARGIN AND PADDING RESET ======*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}


/*====== GLOBAL STYLES ======*/

body {
    font-family: 'Inter', sans-serif;
    font-size: 1rem;
    color: var(--text-color);
    background-color: var(--bg-body);

    display: flex;
    justify-content: center;
}

header,
main,
select,
.schemes-btn,
.text {
    background-color: var(--bg);
}

button,
select {
    font-family: inherit;
    font-size: .75rem;
    font-weight: 700;
    color: var(--text-color);
    transition: 0.3s ease;
}

input,
select,
button {
    cursor: pointer;
}

input:focus,
button:focus,
select:focus {
    border: 3px solid var(--element-focus);
    border-radius: 5px;
    outline: none;
}

button:active {
    transform: scale(0.85);
}

.schemes-btn {
    width: 100%;
    padding: .75rem;
    border: 2px solid var(--border-color);
    border-radius: var(--br-small);
}

.schemes-btn:hover {
    background-color: var(--bg-body);
}

header,
main {
    display: flex;
    flex-direction: column;   
    align-items: center;
}

header {
    padding: 1rem;
    gap: 1rem;
}

select {
    /* Remove default arrow */
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    /* Add custom arrow */
    background-image: url(assets/selector.png);
    background-repeat: no-repeat;
    background-position: 96%;
    padding: .75rem;
    border: 2px solid var(--border-color);
    border-radius: 5px;
}


/*====== MAIN CONTAINER ======*/

.color-scheme-container {
    margin-top: 2rem;
    border: 1px solid var(--border-color);
    border-radius: var(--br-small);
}


/*====== INPUT STYLING =======*/

.input-container {
    display: flex;
    justify-content: space-around;
    gap: 1rem;
}

.seed-color {
    width: 65px;
    height: 42px;
    padding: .1rem;
}

/*====== COLORS CONTAINER STYLING ======*/

.text-container {
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: .5rem;
}

.color {
    width: 250px;
    height: 100px;
    cursor: pointer;
    transition: 0.3s ease;
}

.color:focus {
    border: 3px solid var(--color-focus);
    border-radius: 5px;
    outline: none;
}

svg {
    fill: currentColor;
    pointer-events: none;
    width: 40px;
    height: 40px;
}

.copy-btn {
    background-color: var(--bg);
    border: none;
    border-radius: 5px;
}

.copy-btn:hover {
    background-color: lightgray;
    border-radius: 5px;
}

.color-name,
.text {
    font-size: .75rem;
    background-color: transparent;
    font-weight: 700;
    color: var(--text-color);
    text-align: center;
    padding: .5rem;
}

.color-name {
    width: 250px;
    height: 50px;
    margin: 0 auto 2rem auto;
    border: 2px solid var(--border-color);
    border-radius: 5px;

    display: flex;
    justify-content: center;
    align-items: center;
}

/*====== TOGGLE ======*/

label { /*toggle container*/
    width: 75px;
    height: 40px;
    position: relative;
    display: block;
    background-color: #fff;
    margin-top: -1rem;
    border: 2px solid lightgray;
    border-radius: 200px;
    box-shadow: inset 0px 2px 5px black, inset 0px -2px 5px gray;
    cursor: pointer;
    transition: 0.3s ease;
    
}

label:hover,
label:focus {
    transform: scale(1.05);
    outline: 3px solid var(--element-focus);  
}

label::after{ 
    /*toggle button, the ::after selector inserts something after the content of each selected element(s),
    use content or build it yourself like in this example*/
    content: '';
    width: 30px;
    height: 30px;
    position: absolute;
    top: 3px;
    left: 3px;
    background: linear-gradient(180deg, #ffcc89, #d8860b);
    border-radius: 50%;
    transition: 0.3s;
}

.toggle { /* hide checkbox input, removes from screen reader */
    width: 0;
    height: 0;
    visibility: hidden;          
}   

input:checked + label { /*select and style the first label element that is placed immediately after the input element when checked*/
    background: #2d2730;
}

input:checked + label:after { /*select and style the first label:after element that is placed immediately after the input element when checked*/
    left: 70px;
    transform: translateX(-100%);
    background: linear-gradient(180deg, #0173ff, #3a3a3a);

}

.moon,
.sun {
    position: absolute;
    width: 25px;
    height: 25px;
    top: 5px;
    opacity: .80;
    z-index: 1;
}

.moon {
    right: 5px;
    fill: #7e7e7e;
    transition: 0.3s;
}

.sun {
    left: 5px;
    fill: #fff;
    transition: 0.3s;
}


/*====== MEDIA QUERIES ======*/


@media (min-width: 768px) {
    header {
        padding: 1rem .25rem;
    }

    header,
    main {
        flex-direction: row;
        justify-content: center;
    }

    button,
    select {
        font-size: 1rem;
    }

    select {
        width: 300px;
    }

    label {
        margin: 0;
    }

    .schemes-btn {
        width: 25%;
    }

    .text-container {
        flex-direction: column;
        gap: 0;
    }

    .color-name,
    .text {
        font-size: 1rem;
    }

    .color-name {
        width: 125px;
        height: 65px;
    }    

    .color {
        width: 150px;
        height: 550px;
        margin-bottom: 1rem;
    }

 
}